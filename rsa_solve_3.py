#include <stdio.h>
#include <gmp.h>

int main() {
    // 初始化大整数变量
    mpz_t n, c1, c2, e, r, dr, m, tmp;
    mpz_inits(n, c1, c2, e, r, dr, m, tmp, NULL);

    // 输入题目数据
    mpz_set_str(n, "167292762127451994866023080315106678473808087792565930648046465987033679414559667564498935040862315382238121864288678296539776344687577222126012617674485921293588988029104480701287232365687226353335227717917738263742080344041700553144065826817721715020692236490359016078537276540012969498382637239404506685568189579514504569389031316528820990016993393743908510762219087125197545253434149267288336920599279851237398774477407593759825782306420747731250315070587221", 10);
    mpz_set_str(c1, "28100003876285079243903853763664727453268905685233456675915833851968494728058568763525548359918473145869257162937849901763959745566882063437731713899333716372094132693816595146802373807485741728706289775581466002972209179062453644582151843204496079326790748379552317056005950463894236563308574174029356805748432628377579292234424728165452234363061008642117652741051349531890985005581564579490170662436424532847525237683329221420236340435839521418295384559161917", 10);
    mpz_set_str(c2, "70784826997361792431855335951370039098952066115636345481078664390108518051067254024057556189773542208380272428978064711982086841347681532167507493410930756151154053564558301447253916588104631028571647923695629096205175189510356433533042635215269061675866568039031916924504145641173765595923027834916712834465584206700332993893564234988222337360493685527680476980482169879226286049051027639863259475561277800264075886373536794142074480266997745674436317759725737", 10);
    mpz_set_ui(e, 65537);

    // Step 1: 求 gcd，得到 r
    mpz_gcd(r, n, c2);
    gmp_printf("Recovered r = %Zd\n", r);

    // Step 2: 计算 d_r = e^{-1} mod (r-1)
    mpz_sub_ui(tmp, r, 1);   // tmp = r - 1
    if (mpz_invert(dr, e, tmp) == 0) {
        printf("Error: 无法计算模逆元\n");
        return 1;
    }

    // Step 3: 解密 m = c1^dr mod r
    mpz_powm(m, c1, dr, r);

    // Step 4: 转换成字节串（flag）
    size_t count;
    unsigned char *buf = mpz_export(NULL, &count, 1, 1, 0, 0, m);

    printf("Recovered flag: ");
    for (size_t i = 0; i < count; i++) {
        printf("%c", buf[i]);
    }
    printf("\n");

    // 释放内存
    mpz_clears(n, c1, c2, e, r, dr, m, tmp, NULL);
    free(buf);

    return 0;